{"version":3,"sources":["webpack://ucloud-design-site/./src/components/Footer/index.tsx","webpack://ucloud-design-site/./src/components/Footer/styles.module.scss","webpack://ucloud-design-site/./src/components/ToC/index.tsx","webpack://ucloud-design-site/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://ucloud-design-site/./src/components/ToC/styles.module.scss","webpack://ucloud-design-site/./src/components/ComponentList/index.js","webpack://ucloud-design-site/./src/components/ComponentList/styles.module.scss","webpack://ucloud-design-site/./src/templates/component.tsx","webpack://ucloud-design-site/./src/templates/styles.module.scss"],"names":["className","Date","getFullYear","props","headings","location","rest","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","styles","map","heading","depth","hash","encodeURIComponent","value","replace","toLowerCase","isCurrent","href","markdownRemark","thumbs","category","str","del","index","lastIndexOf","substring","delLast","fields","slug","split","components","allComponents","component","includes","thumbImage","getImage","nodes","find","item","relativePath","name","Link","to","zh_cn","G","alt","image","data","title","frontmatter","ToC","description","dangerouslySetInnerHTML","__html","html","ComponentList","Footer","wrapper","contentWrapper","content","top","tabs"],"mappings":"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","file":"component---src-templates-component-tsx-04cac8d97ec5e5cc8f81.js","sourcesContent":["import * as React from 'react';\nimport * as styles from './styles.module.scss';\n\nconst Index = () => {\n    return <footer className={styles.footer}>© {new Date().getFullYear()}, UCloud</footer>;\n};\n\nexport default Index;\n","// extracted by mini-css-extract-plugin\nexport var footer = \"styles-module--footer--22w0l\";","import * as React from 'react';\nimport * as styles from './styles.module.scss';\n\nexport type Heading = {\n    value: string;\n    depth: number;\n};\n\nconst ToC = (props: { headings: Heading[]; className?: string; location: any }) => {\n    const { headings, className, location, ...rest } = props;\n\n    return (\n        <div {...rest} className={`${styles.wrapper} ${className || ''}`}>\n            <h2>目录</h2>\n            <div className={styles.innerScroll}>\n                {props.headings.map(heading => {\n                    if (heading.depth !== 2) {\n                        return null;\n                    }\n\n                    const hash = encodeURIComponent(heading.value.replace(/\\s+/g, '-').toLowerCase());\n                    const isCurrent = location.hash === '#' + hash;\n\n                    return (\n                        <div className={`${styles.to} ${isCurrent ? styles.current : ''}`} key={heading.value}>\n                            <a href={`#${hash}`}>{heading.value}</a>\n                        </div>\n                    );\n                })}\n            </div>\n        </div>\n    );\n};\n\nexport default ToC;\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","// extracted by mini-css-extract-plugin\nexport var wrapper = \"styles-module--wrapper--1fEI_\";\nexport var innerScroll = \"styles-module--innerScroll--3dHAL\";\nexport var to = \"styles-module--to--1wgum\";\nexport var current = \"styles-module--current--el52f\";","import * as React from 'react';\nimport { Link } from 'gatsby';\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\nimport allComponents from '../../../content/components.json';\nimport * as styles from './styles.module.scss';\n\nfunction delLast(str, del) {\n    if (typeof str !== 'string') {\n        return str;\n    } else {\n        let index = str.lastIndexOf(del);\n        return str.substring(0, index) + str.substring(index + 1, str.length);\n    }\n}\n\nconst getThumbRelativePath = componentName => {\n    return `component/list/${componentName}/thumb.png`;\n};\n\nconst Index = ({ markdownRemark, thumbs }) => {\n    const slug = markdownRemark.fields.slug;\n    let category = delLast(slug.split('/component/category/')[1], '/');\n    let components = [];\n\n    if (category === 'all') {\n        components = allComponents;\n    } else {\n        components = allComponents.filter(component => component.category?.includes(category));\n    }\n\n    return (\n        <div className={styles.wrapper}>\n            <ul>\n                {components.map(component => {\n                    const thumbImage = getImage(\n                        thumbs.nodes.find(item => item.relativePath === getThumbRelativePath(component.name)),\n                    );\n\n                    return (\n                        <li key={component.name}>\n                            <Link to={`/component/${component.name}`}>\n                                <span>\n                                    {component.name} {component.zh_cn}\n                                </span>\n                                <div className={styles.thumb}>\n                                    {thumbImage && <GatsbyImage alt={component.name} image={thumbImage} />}\n                                </div>\n                            </Link>\n                        </li>\n                    );\n                })}\n            </ul>\n            <div className={styles.clear} />\n        </div>\n    );\n};\n\nexport default Index;\n","// extracted by mini-css-extract-plugin\nexport var wrapper = \"styles-module--wrapper--3RqGl\";\nexport var clear = \"styles-module--clear--1CvfJ\";\nexport var thumb = \"styles-module--thumb--31xuk\";","import * as React from 'react';\nimport { graphql } from 'gatsby';\nimport Seo from '../components/seo';\nimport Footer from '../components/Footer';\nimport ToC from '../components/ToC';\nimport ComponentList from '../components/ComponentList';\nimport allComponents from '../../content/components.json';\nimport * as styles from './styles.module.scss';\n\nconst Index = ({ data, location }) => {\n    const { markdownRemark, thumbs } = data;\n\n    return (\n        <div className={styles.wrapper}>\n            <Seo title={markdownRemark.frontmatter.title} />\n\n            <div className={styles.contentWrapper}>\n                <ToC headings={markdownRemark.headings || []} location={location} />\n                <div className={styles.content}>\n                    <div className={styles.top}>\n                        <h1>\n                            {markdownRemark.frontmatter.title}\n                            {allComponents.find(item => item.name === markdownRemark.frontmatter.title)?.zh_cn}\n                        </h1>\n                        {\n                            markdownRemark.frontmatter.description &&\n                            <p>{markdownRemark.frontmatter.description}</p>\n                        }\n                    </div>\n                    {!markdownRemark?.fields?.slug?.includes('/component/category/') && (\n                        <div className={styles.tabs}>\n                            <ul>\n                                <li>设计</li>\n                                <li>开发</li>\n                                <li>Design Token</li>\n                            </ul>\n                        </div>\n                    )}\n                    <section dangerouslySetInnerHTML={{ __html: markdownRemark.html }} />\n                    {markdownRemark?.fields?.slug?.includes('/component/category/') ? (\n                        <ComponentList markdownRemark={markdownRemark} thumbs={thumbs} />\n                    ) : null}\n                </div>\n                <Footer />\n            </div>\n        </div>\n    );\n};\n\nexport default Index;\n\nexport const pageQuery = graphql`\n    query ComponentBySlug($id: String!) {\n        markdownRemark(id: { eq: $id }) {\n            id\n            excerpt(pruneLength: 160)\n            html\n            headings {\n                value\n                depth\n            }\n            fields {\n                slug\n            }\n            frontmatter {\n                title\n                description\n                order\n            }\n        }\n        thumbs: allFile(filter: { relativePath: { glob: \"component/list/*/thumb.png\" } }) {\n            nodes {\n                relativePath\n                childImageSharp {\n                    gatsbyImageData\n                }\n            }\n        }\n    }\n`;\n","// extracted by mini-css-extract-plugin\nexport var wrapper = \"styles-module--wrapper--1ngeQ\";\nexport var contentWrapper = \"styles-module--content-wrapper--23mbo\";\nexport var content = \"styles-module--content--3UXj2\";\nexport var top = \"styles-module--top--14Xp8\";\nexport var tabs = \"styles-module--tabs--2351a\";"],"sourceRoot":""}